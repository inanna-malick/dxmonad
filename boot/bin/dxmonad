#!/bin/bash
#set -e


# todo: read home dir instead of hardcoding


PATH=/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin

USER_UID=$(id -u)
USER_GID=$(id -g)

function require {
  IMAGE=$1
  NAME=$2
  docker start $NAME \
    || docker run -d --name $NAME $IMAGE \
    || true
}

# these are no longer linked by dxmonad, but they should still be up
require "postgres:9.4" "postgres"
require "redis:2.8"    "redis"

# todo: need to ensure all these directories exist, else
# they will be created w/ root as owner
# todo: simple bash loop
dxmonad_up() {
    NAME=$1
    RUNWITH=$2
    docker run \
        --name $NAME \
        --env USER_UID \
        --env USER_GID \
        --env DISPLAY \
        --env BOX_NAME \
        --volume="$HOME/.dbus:/home/dev/.dbus" \
        --volume="$HOME/.sbt:/home/dev/.sbt" \
        --volume="$HOME/.ivy2:/home/dev/.ivy2" \
        --volume="$HOME/.mozilla:/home/dev/.mozilla" \
        --volume="$HOME/.IntelliJIdea14:/home/dev/.IntelliJIdea14" \
        --volume="$HOME/.ssh:/home/dev/.ssh" \
        --volume="$HOME/dxmonad:/home/dev/dxmonad" \
        --volume="$HOME/work:/home/dev/work" \
        --volume=/var/run/docker.sock:/var/run/docker.sock \
        --volume=/tmp/.X11-unix:/tmp/.X11-unix \
        --volume=/run/user/${USER_UID}/pulse:/run/pulse \
        pkinsky/dxmonad:latest $RUNWITH
}


if [ "$1" == "test" ]; then
    docker kill dxmonad-test
    docker rm   dxmonad-test
    echo "Bring up dxmonad-test"
    dxmonad_up  dxmonad-test "xmonad --recompile"
    echo "done recompiling"
else
    docker kill dxmonad
    docker rm   dxmonad
    echo "Starting dxmonad..."
    dxmonad_up  dxmonad
fi
